// <auto-generated />
using System;
using EXE201_2RE_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EXE201_2RE_API.Migrations
{
    [DbContext(typeof(EXE201Context))]
    partial class EXE201ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("tblCarts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCartDetail", b =>
                {
                    b.Property<Guid>("CartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartDetailId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("tblCartDetails");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("tblCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("f1aee1c7-6d5e-4e87-a5ea-3a5d6e7c8f9a"),
                            Name = "T-Shirts"
                        },
                        new
                        {
                            CategoryId = new Guid("d9b4c8c3-3a2e-4b9b-b9f7-5e6a7c8e9f0b"),
                            Name = "Jeans"
                        },
                        new
                        {
                            CategoryId = new Guid("a5e1d2b3-2f3c-4b3d-b7a8-4c5e6f7d8b9a"),
                            Name = "Jackets"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblFavorite", b =>
                {
                    b.Property<Guid>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavoriteId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tblFavorites");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblGenderCategory", b =>
                {
                    b.Property<Guid>("GenderCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderCategoryId");

                    b.ToTable("tblGenderCategories");

                    b.HasData(
                        new
                        {
                            GenderCategoryId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Name = "Male"
                        },
                        new
                        {
                            GenderCategoryId = new Guid("c9ebf5d5-d6b4-4c1d-bc12-fc4b8f1f4c61"),
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblOrderHistory", b =>
                {
                    b.Property<Guid>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderHistoryId");

                    b.HasIndex("CartId");

                    b.ToTable("tblOrderHistories");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ShopOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenderCategoryId");

                    b.HasIndex("ShopOwnerId");

                    b.HasIndex("SizeId");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblReview", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tblReviews");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("tblRoles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Name = "User"
                        },
                        new
                        {
                            RoleId = new Guid("c9ebf5d5-d6b4-4c1d-bc12-fc4b8f1f4c61"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblSize", b =>
                {
                    b.Property<Guid>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("tblSizes");

                    b.HasData(
                        new
                        {
                            SizeId = new Guid("d4f1c0e1-2d41-4f0e-bc9f-4b85b6c5f4a2"),
                            SizeName = "S"
                        },
                        new
                        {
                            SizeId = new Guid("e5a1b4d6-5c4c-4f0e-bc9f-4b85b6c5f4a3"),
                            SizeName = "M"
                        },
                        new
                        {
                            SizeId = new Guid("f6b2e8a7-7d5f-4f0e-bc9f-4b85b6c5f4a4"),
                            SizeName = "L"
                        },
                        new
                        {
                            SizeId = new Guid("a7c3f9b8-8e6f-4f0e-bc9f-4b85b6c5f4a5"),
                            SizeName = "XL"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsShopOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblUsers");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("b1a3e477-9f5e-4bff-ae0a-5e8b42e0f8a0"),
                            Address = "address",
                            CreatedAt = new DateTime(2024, 10, 2, 18, 21, 27, 347, DateTimeKind.Local).AddTicks(6603),
                            Email = "user1@gmail.com",
                            IsShopOwner = true,
                            Password = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            PhoneNumber = "0909123456",
                            RoleId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            ShopAddress = "shop1address",
                            ShopDescription = "shop1des",
                            ShopLogo = "shop1logo",
                            ShopName = "shop1",
                            UpdatedAt = new DateTime(2024, 10, 2, 18, 21, 27, 347, DateTimeKind.Local).AddTicks(6613),
                            Username = "user1"
                        },
                        new
                        {
                            UserId = new Guid("e2c3c2b1-5a1f-4c4f-b1ea-6b2c4f8e1a0b"),
                            Address = "address",
                            CreatedAt = new DateTime(2024, 10, 2, 18, 21, 27, 347, DateTimeKind.Local).AddTicks(6649),
                            Email = "admin@gmail.com",
                            IsShopOwner = false,
                            Password = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5",
                            PhoneNumber = "0912398765",
                            RoleId = new Guid("c9ebf5d5-d6b4-4c1d-bc12-fc4b8f1f4c61"),
                            UpdatedAt = new DateTime(2024, 10, 2, 18, 21, 27, 347, DateTimeKind.Local).AddTicks(6649),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblUser", "User")
                        .WithMany("TblCarts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCartDetail", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCart", "Cart")
                        .WithMany("TblCartDetails")
                        .HasForeignKey("CartId");

                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "Product")
                        .WithMany("TblCartDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblFavorite", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "Product")
                        .WithMany("TblFavorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "User")
                        .WithMany("TblFavorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblOrderHistory", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCart", "Cart")
                        .WithMany("TblOrderHistories")
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCategory", "Category")
                        .WithMany("TblProducts")
                        .HasForeignKey("CategoryId");

                    b.HasOne("EXE201_2RE_API.Models.TblGenderCategory", "GenderCategory")
                        .WithMany("TblProducts")
                        .HasForeignKey("GenderCategoryId");

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "ShopOwner")
                        .WithMany("TblProducts")
                        .HasForeignKey("ShopOwnerId");

                    b.HasOne("EXE201_2RE_API.Models.TblSize", "Size")
                        .WithMany("TblProducts")
                        .HasForeignKey("SizeId");

                    b.Navigation("Category");

                    b.Navigation("GenderCategory");

                    b.Navigation("ShopOwner");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblReview", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "Product")
                        .WithMany("TblReviews")
                        .HasForeignKey("ProductId");

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "User")
                        .WithMany("TblReviews")
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblRole", "Role")
                        .WithMany("TblUsers")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.Navigation("TblCartDetails");

                    b.Navigation("TblOrderHistories");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCategory", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblGenderCategory", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.Navigation("TblCartDetails");

                    b.Navigation("TblFavorites");

                    b.Navigation("TblReviews");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblRole", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblSize", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.Navigation("TblCarts");

                    b.Navigation("TblFavorites");

                    b.Navigation("TblProducts");

                    b.Navigation("TblReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
