// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;

namespace EXE201_2RE_API.Models;

public partial class EXE201Context : DbContext
{
    public EXE201Context()
    {
    }

    public EXE201Context(DbContextOptions<EXE201Context> options)
        : base(options)
    {
    }

    public virtual DbSet<TblCart> TblCarts { get; set; }

    public virtual DbSet<TblCartDetail> TblCartDetails { get; set; }

    public virtual DbSet<TblCategory> TblCategories { get; set; }

    public virtual DbSet<TblGenderCategory> TblGenderCategories { get; set; }

    public virtual DbSet<TblOrderHistory> TblOrderHistories { get; set; }

    public virtual DbSet<TblProduct> TblProducts { get; set; }

    public virtual DbSet<TblReview> TblReviews { get; set; }

    public virtual DbSet<TblRole> TblRoles { get; set; }

    public virtual DbSet<TblSize> TblSizes { get; set; }

    public virtual DbSet<TblUser> TblUsers { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=LAPTOP-284BPIMQ;Initial Catalog=EXE201;Persist Security Info=True;User ID=sa;Password=12345");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TblCart>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblCart__3214EC274A7F08E7");

            entity.ToTable("TblCart");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DateTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Phone)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('pending')")
                .HasColumnName("status");
            entity.Property(e => e.TotalPrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.TblCarts)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TblCart__UserID__4F7CD00D");
        });

        modelBuilder.Entity<TblCartDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblCartD__3214EC276BB1839A");

            entity.ToTable("TblCartDetail");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CartId).HasColumnName("CartID");
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");

            entity.HasOne(d => d.Cart).WithMany(p => p.TblCartDetails)
                .HasForeignKey(d => d.CartId)
                .HasConstraintName("FK__TblCartDe__CartI__52593CB8");

            entity.HasOne(d => d.Product).WithMany(p => p.TblCartDetails)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__TblCartDe__Produ__534D60F1");
        });

        modelBuilder.Entity<TblCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblCateg__3214EC270CAF74CD");

            entity.ToTable("TblCategory");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<TblGenderCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblGende__3214EC2798444B39");

            entity.ToTable("TblGenderCategory");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<TblOrderHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblOrder__3214EC2732515B5C");

            entity.ToTable("TblOrderHistory");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CartId).HasColumnName("CartID");
            entity.Property(e => e.ChangedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Cart).WithMany(p => p.TblOrderHistories)
                .HasForeignKey(d => d.CartId)
                .HasConstraintName("FK__TblOrderH__CartI__571DF1D5");
        });

        modelBuilder.Entity<TblProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblProdu__3214EC2718DBB64B");

            entity.ToTable("TblProduct");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("createdAt");
            entity.Property(e => e.Description)
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.GenderCategoryId).HasColumnName("GenderCategoryID");
            entity.Property(e => e.ImgUrl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("imgUrl");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("name");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("price");
            entity.Property(e => e.ShopOwnerId).HasColumnName("ShopOwnerID");
            entity.Property(e => e.SizeId).HasColumnName("SizeID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('active')")
                .HasColumnName("status");
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("updatedAt");

            entity.HasOne(d => d.Category).WithMany(p => p.TblProducts)
                .HasForeignKey(d => d.CategoryId)
                .HasConstraintName("FK__TblProduc__Categ__48CFD27E");

            entity.HasOne(d => d.GenderCategory).WithMany(p => p.TblProducts)
                .HasForeignKey(d => d.GenderCategoryId)
                .HasConstraintName("FK__TblProduc__Gende__49C3F6B7");

            entity.HasOne(d => d.ShopOwner).WithMany(p => p.TblProducts)
                .HasForeignKey(d => d.ShopOwnerId)
                .HasConstraintName("FK__TblProduc__ShopO__47DBAE45");

            entity.HasOne(d => d.Size).WithMany(p => p.TblProducts)
                .HasForeignKey(d => d.SizeId)
                .HasConstraintName("FK__TblProduc__SizeI__4AB81AF0");
        });

        modelBuilder.Entity<TblReview>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblRevie__3214EC27322D413D");

            entity.ToTable("TblReview");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Comment).HasColumnType("text");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Product).WithMany(p => p.TblReviews)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__TblReview__Produ__5BE2A6F2");

            entity.HasOne(d => d.User).WithMany(p => p.TblReviews)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TblReview__UserI__5AEE82B9");
        });

        modelBuilder.Entity<TblRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblRole__3214EC276190B10E");

            entity.ToTable("TblRole");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<TblSize>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblSize__3214EC270AB7B781");

            entity.ToTable("TblSize");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.SizeName)
                .HasMaxLength(5)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TblUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TblUser__3214EC27E36A73E1");

            entity.ToTable("TblUser");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("address");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("createdAt");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.IsShopOwner)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isShopOwner");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.RoleId).HasColumnName("roleID");
            entity.Property(e => e.ShopAddress)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("shopAddress");
            entity.Property(e => e.ShopDescription)
                .HasColumnType("text")
                .HasColumnName("shopDescription");
            entity.Property(e => e.ShopLogo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("shopLogo");
            entity.Property(e => e.ShopName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("shopName");
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("updatedAt");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("username");

            entity.HasOne(d => d.Role).WithMany(p => p.TblUsers)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__TblUser__roleID__3C69FB99");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}